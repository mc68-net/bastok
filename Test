#!/usr/bin/env bash
set -eu -o pipefail

PASSED=false
trap 'ec=$?; $PASSED || { echo 1>&2 "*** FAILED (exitcode=$ec)"; }' 0

qecho() {
    [[ -n $quiet ]] && return
    echo "$@"
}

hexdiff() {
    cmp "$1" "$2" && return 0
    diff -U 0 \
        --label   "$1"  --label   "$2" \
        <(xxd -c8 -g1 "$1") <(xxd -c8 -g1 "$2")
}

basedir=$(cd "$(dirname "$0")" && pwd -P)
cd "$basedir"

#   -C (clean) must be first argument if present
[[ ${#@} -gt 0 && $1 == -C ]] && { shift; rm -rf .build/; }
#   -q anywhere in the command line (even with -v!) sets functests quiet.
quiet=
for arg in "$@"; do [[ $arg == -q ]] && quiet=-q; done

. ./pactivate -q
export PYTHONPATH="$basedir/pylib"

####################################################################
#   Unit Tests

pytest -q -o testpaths=pylib/ "$@"

####################################################################
#   Functional Tests

ftdata=.build/programs/
mkdir -p $ftdata/detok

qecho "------ detok    simple.bas"
bin/detok    programs/simple.bas >$ftdata/detok/simple.ba0
diff -u {$ftdata/detok,programs}/simple.ba0

qecho "------ detok -e simple.bas"
bin/detok -e programs/simple.bas >$ftdata/detok/simple.ba1
diff -u {$ftdata/detok,programs}/simple.ba1

bin/retok    programs/simple.bas >$ftdata/detok/simple.ba1
bin/retok -e programs/simple.bas >$ftdata/detok/simple.ba0

{
    f="binchars"
    qecho "====== detok --binary $f.bas"
    bin/detok --binary programs/$f.bas >$ftdata/detok/$f.baa
    hexdiff {$ftdata/detok,programs}/$f.baa
}

PASSED=true
